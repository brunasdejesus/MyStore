{
	"info": {
		"_postman_id": "403acba2-f95e-4990-bc52-d01cabaf76c3",
		"name": "MyStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40de47ba-5044-4e69-96a9-a2fdf790c04e",
						"exec": [
							"// Verifica se o status da response é 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Verifica se existem 100 posts na response\r",
							"pm.test(\"Response length is 100\", function () {\r",
							"    pm.response.length == 100;\r",
							"});\r",
							"\r",
							"//verifica se cada usuário tem 10 posts\r",
							"pm.test(\"Users posts\", function () {\r",
							"    \r",
							"    var userPostQnt = {user1:0, user2:0, user3:0, user4:0, user5:0, \r",
							"                       user6:0, user7:0, user8:0, user:0, user10:0};\r",
							"                       \r",
							"    for (var i = 0; i < 10; i++){\r",
							"        for(var post in pm.response.json()){\r",
							"            if(post.userId == i + 1){\r",
							"                userPostQnt[i] += 1;\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"    \r",
							"        \r",
							"    for(var postQnt in userPostQnt){\r",
							"        if(postQnt < 10){\r",
							"            return false;\r",
							"        }\r",
							"    }\r",
							"    return true;\r",
							"});\r",
							"\r",
							"//verifica o body do post 1\r",
							"pm.test('Validating body of postId=1', function () {\r",
							"    for(var post in pm.response.json()){\r",
							"        if(post.userId == 1){\r",
							"            if(post.body == 'quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto'){\r",
							"                return true;\r",
							"                \r",
							"            }\r",
							"            return false;\r",
							"        }\r",
							"    }\r",
							"    return false;\r",
							"});\r",
							"\r",
							"//verifica o title do post 100\r",
							"pm.test('Validating title of postId=100', function () {\r",
							"    for(var post in pm.response.json()){\r",
							"        if(post.userId == 100){\r",
							"            if(post.title == 'at nam consequatur ea labore ea harum'){\r",
							"                return true;\r",
							"            }\r",
							"            return false;\r",
							"        }\r",
							"    }\r",
							"    return false;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}users",
					"host": [
						"{{api_url}}users"
					]
				},
				"description": "Retorna todos os posts"
			},
			"response": []
		},
		{
			"name": "Cdastro",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4cf22c39-0d65-4d73-b5be-f8a0feb0d630",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": 1,\r\n        \"name\": \"Leanne Graham\",\r\n        \"username\": \"Bret\",\r\n        \"email\": \"Sincere@april.biz\",\r\n        \"address\": {\r\n            \"street\": \"Kulas Light\",\r\n            \"suite\": \"Apt. 556\",\r\n            \"city\": \"Gwenborough\",\r\n            \"zipcode\": \"92998-3874\",\r\n            \"geo\": {\r\n                \"lat\": \"-37.3159\",\r\n                \"lng\": \"81.1496\"\r\n            }\r\n        },\r\n        \"phone\": \"1-770-736-8031 x56442\",\r\n        \"website\": \"hildegard.org\",\r\n        \"company\": {\r\n            \"name\": \"Romaguera-Crona\",\r\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n            \"bs\": \"harness real-time e-markets\"\r\n        }\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}